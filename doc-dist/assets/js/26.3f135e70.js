(window.webpackJsonp = window.webpackJsonp || []).push([
  [26],
  {
    393: function(t, s, a) {
      'use strict';
      a.r(s);
      var n = a(42),
        p = Object(n.a)(
          {},
          function() {
            var t = this,
              s = t.$createElement,
              a = t._self._c || s;
            return a('ContentSlotsDistributor', { attrs: { 'slot-key': t.$parent.slotKey } }, [
              a('h3', { attrs: { id: '获取form组件的值数据' } }, [
                a('a', { staticClass: 'header-anchor', attrs: { href: '#获取form组件的值数据' } }, [
                  t._v('#'),
                ]),
                t._v(' 获取Form组件的值数据'),
              ]),
              t._v(' '),
              a('p', [
                t._v('Form表单组件在'),
                a('code', [t._v('editor')]),
                t._v('目录下'),
                a('code', [t._v('src/components/BasicShop/BasicComponents')]),
                t._v('位置.'),
              ]),
              t._v(' '),
              a('p', [
                t._v('Form组件是'),
                a('code', [t._v('Dooring')]),
                t._v(
                  '的核心组件之一, 内部的值通过Form组件内部收集, 当然我们也可以暴露出来让其他交互或者组件消费(需要一定的二次开发), 关键代码如下:',
                ),
              ]),
              t._v(' '),
              a('div', { staticClass: 'language-js extra-class' }, [
                a('pre', { pre: !0, attrs: { class: 'language-js' } }, [
                  a('code', [
                    t._v('req'),
                    a('span', { pre: !0, attrs: { class: 'token punctuation' } }, [t._v('.')]),
                    a('span', { pre: !0, attrs: { class: 'token function' } }, [t._v('post')]),
                    a('span', { pre: !0, attrs: { class: 'token punctuation' } }, [t._v('(')]),
                    a('span', { pre: !0, attrs: { class: 'token template-string' } }, [
                      a(
                        'span',
                        { pre: !0, attrs: { class: 'token template-punctuation string' } },
                        [t._v('`')],
                      ),
                      a('span', { pre: !0, attrs: { class: 'token string' } }, [
                        t._v('/vip/h5/form/post'),
                      ]),
                      a('span', { pre: !0, attrs: { class: 'token interpolation' } }, [
                        a(
                          'span',
                          {
                            pre: !0,
                            attrs: { class: 'token interpolation-punctuation punctuation' },
                          },
                          [t._v('${')],
                        ),
                        t._v('location'),
                        a('span', { pre: !0, attrs: { class: 'token punctuation' } }, [t._v('.')]),
                        t._v('search'),
                        a(
                          'span',
                          {
                            pre: !0,
                            attrs: { class: 'token interpolation-punctuation punctuation' },
                          },
                          [t._v('}')],
                        ),
                      ]),
                      a(
                        'span',
                        { pre: !0, attrs: { class: 'token template-punctuation string' } },
                        [t._v('`')],
                      ),
                    ]),
                    a('span', { pre: !0, attrs: { class: 'token punctuation' } }, [t._v(',')]),
                    t._v(' '),
                    a('span', { pre: !0, attrs: { class: 'token punctuation' } }, [t._v('{')]),
                    a('span', { pre: !0, attrs: { class: 'token operator' } }, [t._v('...')]),
                    t._v('fields'),
                    a('span', { pre: !0, attrs: { class: 'token punctuation' } }, [t._v(',')]),
                    t._v(' '),
                    a('span', { pre: !0, attrs: { class: 'token operator' } }, [t._v('...')]),
                    t._v('formData'),
                    a('span', { pre: !0, attrs: { class: 'token punctuation' } }, [t._v('}')]),
                    a('span', { pre: !0, attrs: { class: 'token punctuation' } }, [t._v(')')]),
                    a('span', { pre: !0, attrs: { class: 'token punctuation' } }, [t._v('.')]),
                    a('span', { pre: !0, attrs: { class: 'token function' } }, [t._v('then')]),
                    a('span', { pre: !0, attrs: { class: 'token punctuation' } }, [t._v('(')]),
                    a('span', { pre: !0, attrs: { class: 'token parameter' } }, [t._v('res')]),
                    t._v(' '),
                    a('span', { pre: !0, attrs: { class: 'token operator' } }, [t._v('=>')]),
                    t._v(' '),
                    a('span', { pre: !0, attrs: { class: 'token punctuation' } }, [t._v('{')]),
                    t._v('\n    '),
                    a('span', { pre: !0, attrs: { class: 'token keyword' } }, [t._v('if')]),
                    a('span', { pre: !0, attrs: { class: 'token punctuation' } }, [t._v('(')]),
                    t._v('type '),
                    a('span', { pre: !0, attrs: { class: 'token operator' } }, [t._v('===')]),
                    t._v(' '),
                    a('span', { pre: !0, attrs: { class: 'token string' } }, [t._v("'link'")]),
                    a('span', { pre: !0, attrs: { class: 'token punctuation' } }, [t._v(')')]),
                    t._v(' '),
                    a('span', { pre: !0, attrs: { class: 'token punctuation' } }, [t._v('{')]),
                    t._v('\n    '),
                    a('span', { pre: !0, attrs: { class: 'token comment' } }, [
                      t._v('// 解析参数'),
                    ]),
                    t._v('\n    '),
                    a('span', { pre: !0, attrs: { class: 'token keyword' } }, [t._v('let')]),
                    t._v(' isPre '),
                    a('span', { pre: !0, attrs: { class: 'token operator' } }, [t._v('=')]),
                    t._v(' content'),
                    a('span', { pre: !0, attrs: { class: 'token punctuation' } }, [t._v('.')]),
                    a('span', { pre: !0, attrs: { class: 'token function' } }, [t._v('indexOf')]),
                    a('span', { pre: !0, attrs: { class: 'token punctuation' } }, [t._v('(')]),
                    a('span', { pre: !0, attrs: { class: 'token string' } }, [t._v("'?'")]),
                    a('span', { pre: !0, attrs: { class: 'token punctuation' } }, [t._v(')')]),
                    t._v(' '),
                    a('span', { pre: !0, attrs: { class: 'token operator' } }, [t._v('<')]),
                    t._v(' '),
                    a('span', { pre: !0, attrs: { class: 'token number' } }, [t._v('0')]),
                    a('span', { pre: !0, attrs: { class: 'token punctuation' } }, [t._v(';')]),
                    t._v('\n    '),
                    a('span', { pre: !0, attrs: { class: 'token keyword' } }, [t._v('let')]),
                    t._v(' query '),
                    a('span', { pre: !0, attrs: { class: 'token operator' } }, [t._v('=')]),
                    t._v(' '),
                    a('span', { pre: !0, attrs: { class: 'token punctuation' } }, [t._v('{')]),
                    t._v('dr'),
                    a('span', { pre: !0, attrs: { class: 'token operator' } }, [t._v(':')]),
                    t._v(' Date'),
                    a('span', { pre: !0, attrs: { class: 'token punctuation' } }, [t._v('.')]),
                    a('span', { pre: !0, attrs: { class: 'token function' } }, [t._v('now')]),
                    a('span', { pre: !0, attrs: { class: 'token punctuation' } }, [t._v('(')]),
                    a('span', { pre: !0, attrs: { class: 'token punctuation' } }, [t._v(')')]),
                    a('span', { pre: !0, attrs: { class: 'token punctuation' } }, [t._v(',')]),
                    t._v(' '),
                    a('span', { pre: !0, attrs: { class: 'token keyword' } }, [t._v('from')]),
                    a('span', { pre: !0, attrs: { class: 'token operator' } }, [t._v(':')]),
                    t._v(' urlParmas'),
                    a('span', { pre: !0, attrs: { class: 'token punctuation' } }, [t._v('.')]),
                    t._v('tid'),
                    a('span', { pre: !0, attrs: { class: 'token punctuation' } }, [t._v('}')]),
                    a('span', { pre: !0, attrs: { class: 'token punctuation' } }, [t._v(';')]),
                    t._v('\n    '),
                    a('span', { pre: !0, attrs: { class: 'token keyword' } }, [t._v('try')]),
                    t._v(' '),
                    a('span', { pre: !0, attrs: { class: 'token punctuation' } }, [t._v('{')]),
                    t._v('\n        query '),
                    a('span', { pre: !0, attrs: { class: 'token operator' } }, [t._v('=')]),
                    t._v(' params '),
                    a('span', { pre: !0, attrs: { class: 'token operator' } }, [t._v('?')]),
                    t._v(' '),
                    a('span', { pre: !0, attrs: { class: 'token punctuation' } }, [t._v('{')]),
                    a('span', { pre: !0, attrs: { class: 'token operator' } }, [t._v('...')]),
                    a('span', { pre: !0, attrs: { class: 'token constant' } }, [t._v('JSON')]),
                    a('span', { pre: !0, attrs: { class: 'token punctuation' } }, [t._v('.')]),
                    a('span', { pre: !0, attrs: { class: 'token function' } }, [t._v('parse')]),
                    a('span', { pre: !0, attrs: { class: 'token punctuation' } }, [t._v('(')]),
                    t._v('params'),
                    a('span', { pre: !0, attrs: { class: 'token punctuation' } }, [t._v(')')]),
                    a('span', { pre: !0, attrs: { class: 'token punctuation' } }, [t._v(',')]),
                    t._v(' '),
                    a('span', { pre: !0, attrs: { class: 'token operator' } }, [t._v('...')]),
                    t._v('query'),
                    a('span', { pre: !0, attrs: { class: 'token punctuation' } }, [t._v('}')]),
                    t._v(' '),
                    a('span', { pre: !0, attrs: { class: 'token operator' } }, [t._v(':')]),
                    t._v(' query'),
                    a('span', { pre: !0, attrs: { class: 'token punctuation' } }, [t._v(';')]),
                    t._v('\n    '),
                    a('span', { pre: !0, attrs: { class: 'token punctuation' } }, [t._v('}')]),
                    a('span', { pre: !0, attrs: { class: 'token keyword' } }, [t._v('catch')]),
                    a('span', { pre: !0, attrs: { class: 'token punctuation' } }, [t._v('(')]),
                    t._v('err'),
                    a('span', { pre: !0, attrs: { class: 'token punctuation' } }, [t._v(')')]),
                    t._v(' '),
                    a('span', { pre: !0, attrs: { class: 'token punctuation' } }, [t._v('{')]),
                    t._v('\n        console'),
                    a('span', { pre: !0, attrs: { class: 'token punctuation' } }, [t._v('.')]),
                    a('span', { pre: !0, attrs: { class: 'token function' } }, [t._v('log')]),
                    a('span', { pre: !0, attrs: { class: 'token punctuation' } }, [t._v('(')]),
                    t._v('err'),
                    a('span', { pre: !0, attrs: { class: 'token punctuation' } }, [t._v(')')]),
                    t._v('\n    '),
                    a('span', { pre: !0, attrs: { class: 'token punctuation' } }, [t._v('}')]),
                    t._v('\n\n    '),
                    a('span', { pre: !0, attrs: { class: 'token comment' } }, [t._v('// 跳转')]),
                    t._v('\n    '),
                    a('span', { pre: !0, attrs: { class: 'token keyword' } }, [t._v('if')]),
                    a('span', { pre: !0, attrs: { class: 'token punctuation' } }, [t._v('(')]),
                    t._v('content'),
                    a('span', { pre: !0, attrs: { class: 'token punctuation' } }, [t._v('.')]),
                    a('span', { pre: !0, attrs: { class: 'token function' } }, [t._v('indexOf')]),
                    a('span', { pre: !0, attrs: { class: 'token punctuation' } }, [t._v('(')]),
                    a('span', { pre: !0, attrs: { class: 'token string' } }, [t._v("'http'")]),
                    a('span', { pre: !0, attrs: { class: 'token punctuation' } }, [t._v(')')]),
                    t._v(' '),
                    a('span', { pre: !0, attrs: { class: 'token operator' } }, [t._v('>')]),
                    t._v(' '),
                    a('span', { pre: !0, attrs: { class: 'token operator' } }, [t._v('-')]),
                    a('span', { pre: !0, attrs: { class: 'token number' } }, [t._v('1')]),
                    a('span', { pre: !0, attrs: { class: 'token punctuation' } }, [t._v(')')]),
                    t._v(' '),
                    a('span', { pre: !0, attrs: { class: 'token punctuation' } }, [t._v('{')]),
                    t._v('\n        window'),
                    a('span', { pre: !0, attrs: { class: 'token punctuation' } }, [t._v('.')]),
                    t._v('location'),
                    a('span', { pre: !0, attrs: { class: 'token punctuation' } }, [t._v('.')]),
                    t._v('href '),
                    a('span', { pre: !0, attrs: { class: 'token operator' } }, [t._v('=')]),
                    t._v(' content '),
                    a('span', { pre: !0, attrs: { class: 'token operator' } }, [t._v('+')]),
                    t._v(' '),
                    a('span', { pre: !0, attrs: { class: 'token function' } }, [t._v('urlencode')]),
                    a('span', { pre: !0, attrs: { class: 'token punctuation' } }, [t._v('(')]),
                    t._v('query'),
                    a('span', { pre: !0, attrs: { class: 'token punctuation' } }, [t._v(',')]),
                    t._v(' isPre'),
                    a('span', { pre: !0, attrs: { class: 'token punctuation' } }, [t._v(')')]),
                    a('span', { pre: !0, attrs: { class: 'token punctuation' } }, [t._v(';')]),
                    t._v('\n        '),
                    a('span', { pre: !0, attrs: { class: 'token keyword' } }, [t._v('return')]),
                    t._v('\n    '),
                    a('span', { pre: !0, attrs: { class: 'token punctuation' } }, [t._v('}')]),
                    t._v('\n\n    history'),
                    a('span', { pre: !0, attrs: { class: 'token punctuation' } }, [t._v('.')]),
                    a('span', { pre: !0, attrs: { class: 'token function' } }, [t._v('push')]),
                    a('span', { pre: !0, attrs: { class: 'token punctuation' } }, [t._v('(')]),
                    a('span', { pre: !0, attrs: { class: 'token template-string' } }, [
                      a(
                        'span',
                        { pre: !0, attrs: { class: 'token template-punctuation string' } },
                        [t._v('`')],
                      ),
                      a('span', { pre: !0, attrs: { class: 'token string' } }, [t._v('/m?tid=')]),
                      a('span', { pre: !0, attrs: { class: 'token interpolation' } }, [
                        a(
                          'span',
                          {
                            pre: !0,
                            attrs: { class: 'token interpolation-punctuation punctuation' },
                          },
                          [t._v('${')],
                        ),
                        t._v('content'),
                        a(
                          'span',
                          {
                            pre: !0,
                            attrs: { class: 'token interpolation-punctuation punctuation' },
                          },
                          [t._v('}')],
                        ),
                      ]),
                      a('span', { pre: !0, attrs: { class: 'token string' } }, [t._v('&')]),
                      a('span', { pre: !0, attrs: { class: 'token interpolation' } }, [
                        a(
                          'span',
                          {
                            pre: !0,
                            attrs: { class: 'token interpolation-punctuation punctuation' },
                          },
                          [t._v('${')],
                        ),
                        a('span', { pre: !0, attrs: { class: 'token function' } }, [
                          t._v('urlencode'),
                        ]),
                        a('span', { pre: !0, attrs: { class: 'token punctuation' } }, [t._v('(')]),
                        t._v('query'),
                        a('span', { pre: !0, attrs: { class: 'token punctuation' } }, [t._v(')')]),
                        a(
                          'span',
                          {
                            pre: !0,
                            attrs: { class: 'token interpolation-punctuation punctuation' },
                          },
                          [t._v('}')],
                        ),
                      ]),
                      a(
                        'span',
                        { pre: !0, attrs: { class: 'token template-punctuation string' } },
                        [t._v('`')],
                      ),
                    ]),
                    a('span', { pre: !0, attrs: { class: 'token punctuation' } }, [t._v(')')]),
                    a('span', { pre: !0, attrs: { class: 'token punctuation' } }, [t._v(';')]),
                    t._v('\n    '),
                    a('span', { pre: !0, attrs: { class: 'token punctuation' } }, [t._v('}')]),
                    a('span', { pre: !0, attrs: { class: 'token keyword' } }, [t._v('else')]),
                    t._v(' '),
                    a('span', { pre: !0, attrs: { class: 'token keyword' } }, [t._v('if')]),
                    a('span', { pre: !0, attrs: { class: 'token punctuation' } }, [t._v('(')]),
                    t._v('type '),
                    a('span', { pre: !0, attrs: { class: 'token operator' } }, [t._v('===')]),
                    t._v(' '),
                    a('span', { pre: !0, attrs: { class: 'token string' } }, [t._v("'modal'")]),
                    a('span', { pre: !0, attrs: { class: 'token punctuation' } }, [t._v(')')]),
                    t._v(' '),
                    a('span', { pre: !0, attrs: { class: 'token punctuation' } }, [t._v('{')]),
                    t._v('\n    '),
                    a('span', { pre: !0, attrs: { class: 'token function' } }, [
                      t._v('setVisible'),
                    ]),
                    a('span', { pre: !0, attrs: { class: 'token punctuation' } }, [t._v('(')]),
                    a('span', { pre: !0, attrs: { class: 'token boolean' } }, [t._v('true')]),
                    a('span', { pre: !0, attrs: { class: 'token punctuation' } }, [t._v(')')]),
                    a('span', { pre: !0, attrs: { class: 'token punctuation' } }, [t._v(';')]),
                    t._v('\n    '),
                    a('span', { pre: !0, attrs: { class: 'token punctuation' } }, [t._v('}')]),
                    a('span', { pre: !0, attrs: { class: 'token keyword' } }, [t._v('else')]),
                    t._v(' '),
                    a('span', { pre: !0, attrs: { class: 'token keyword' } }, [t._v('if')]),
                    a('span', { pre: !0, attrs: { class: 'token punctuation' } }, [t._v('(')]),
                    t._v('type '),
                    a('span', { pre: !0, attrs: { class: 'token operator' } }, [t._v('===')]),
                    t._v(' '),
                    a('span', { pre: !0, attrs: { class: 'token string' } }, [t._v("'code'")]),
                    a('span', { pre: !0, attrs: { class: 'token punctuation' } }, [t._v(')')]),
                    t._v(' '),
                    a('span', { pre: !0, attrs: { class: 'token punctuation' } }, [t._v('{')]),
                    t._v('\n    '),
                    a('span', { pre: !0, attrs: { class: 'token function' } }, [t._v('eval')]),
                    a('span', { pre: !0, attrs: { class: 'token punctuation' } }, [t._v('(')]),
                    t._v('content'),
                    a('span', { pre: !0, attrs: { class: 'token punctuation' } }, [t._v(')')]),
                    a('span', { pre: !0, attrs: { class: 'token punctuation' } }, [t._v(';')]),
                    t._v('\n    '),
                    a('span', { pre: !0, attrs: { class: 'token punctuation' } }, [t._v('}')]),
                    t._v('\n'),
                    a('span', { pre: !0, attrs: { class: 'token punctuation' } }, [t._v('}')]),
                    a('span', { pre: !0, attrs: { class: 'token punctuation' } }, [t._v(')')]),
                    t._v('\n'),
                  ]),
                ]),
              ]),
              a('p', [
                t._v('数据收集提交的核心代码在Form组件的第56-149行, 也就是'),
                a('code', [t._v('submit')]),
                t._v('方法. 表单组件收集到的数据统一存放在代码中的'),
                a('code', [t._v('formData')]),
                t._v('字段, 所以要想在其他地方获取用户表单填写的值, 我们只需要手动将'),
                a('code', [t._v('formData')]),
                t._v('传递出去, 或者挂载到全局(如window对象, localStorage, indexedDB等).'),
              ]),
            ]);
          },
          [],
          !1,
          null,
          null,
          null,
        );
      s.default = p.exports;
    },
  },
]);
